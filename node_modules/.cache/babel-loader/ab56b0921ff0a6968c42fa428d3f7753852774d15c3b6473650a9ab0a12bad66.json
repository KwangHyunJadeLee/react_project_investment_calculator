{"ast":null,"code":"var _jsxFileName = \"/Users/gwang/react-project/react-complete-guide/react_project_investment_calculator/src/component/InvestmentResult.js\";\nimport styles from './InvestmentResult.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nconst InvestmentResult = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.items.map(yearlyData => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearlyData[\"year\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearlyData[\"savingsEndOfYear\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearlyData[\"yearlyInterest\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearlyData[\"savingsEndOfYear\"] - props.initialInvestment - yearlyData[\"yearlyContribution\"] * yearlyData[\"year\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(props.initialInvestment + yearlyData[\"yearlyContribution\"] * yearlyData[\"year\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, yearlyData.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = InvestmentResult;\nexport default InvestmentResult;\nvar _c;\n$RefreshReg$(_c, \"InvestmentResult\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","InvestmentResult","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","items","map","yearlyData","format","initialInvestment","year","_c","$RefreshReg$"],"sources":["/Users/gwang/react-project/react-complete-guide/react_project_investment_calculator/src/component/InvestmentResult.js"],"sourcesContent":["import styles from './InvestmentResult.module.css';\n\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nconst InvestmentResult = (props) => {\n  return (\n    <table className=\"result\">\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Total Savings</th>\n          <th>Interest (Year)</th>\n          <th>Total Interest</th>\n          <th>Invested Capital</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.items.map((yearlyData) => {\n          return (\n            <tr key={yearlyData.year}>\n              <td>{yearlyData[\"year\"]}</td>\n              <td>{formatter.format(yearlyData[\"savingsEndOfYear\"])}</td>\n              <td>{formatter.format(yearlyData[\"yearlyInterest\"])}</td>\n              <td>\n                {formatter.format(\n                  yearlyData[\"savingsEndOfYear\"] -\n                    props.initialInvestment -\n                    yearlyData[\"yearlyContribution\"] * yearlyData[\"year\"]\n                )}\n              </td>\n              <td>\n                {formatter.format(\n                  props.initialInvestment +\n                    yearlyData[\"yearlyContribution\"] * yearlyData[\"year\"]\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default InvestmentResult;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}